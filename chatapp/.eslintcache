[{"/home/randy/workspace/tornado-mongodb-react/chatapp/src/App.js":"1","/home/randy/workspace/tornado-mongodb-react/chatapp/src/reportWebVitals.js":"2","/home/randy/workspace/tornado-mongodb-react/chatapp/src/index.js":"3","/home/randy/workspace/tornado-mongodb-react/chatapp/src/config.js":"4","/home/randy/workspace/tornado-mongodb-react/chatapp/src/Components/js/Login.js":"5","/home/randy/workspace/tornado-mongodb-react/chatapp/src/Components/js/Signup.js":"6","/home/randy/workspace/tornado-mongodb-react/chatapp/src/StateProvider.js":"7","/home/randy/workspace/tornado-mongodb-react/chatapp/src/Components/js/Home.js":"8","/home/randy/workspace/tornado-mongodb-react/chatapp/src/Components/js/ChatBox.js":"9","/home/randy/workspace/tornado-mongodb-react/chatapp/src/Components/js/SignupData.js":"10","/home/randy/workspace/tornado-mongodb-react/chatapp/src/reducer.js":"11","/home/randy/workspace/tornado-mongodb-react/chatapp/src/Components/js/Navbar.js":"12","/home/randy/workspace/tornado-mongodb-react/chatapp/src/Components/js/Chat.js":"13","/home/randy/workspace/tornado-mongodb-react/chatapp/src/Components/js/Profile.js":"14","/home/randy/workspace/tornado-mongodb-react/chatapp/src/Components/js/RenderUser.js":"15","/home/randy/workspace/tornado-mongodb-react/chatapp/src/Components/js/AddFriend.js":"16","/home/randy/workspace/tornado-mongodb-react/chatapp/src/Components/js/Message.js":"17","/home/randy/workspace/tornado-mongodb-react/chatapp/src/Components/ProjectImages/ProjectImages.js":"18"},{"size":720,"mtime":1612338617706,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1612064035800,"results":"21","hashOfConfig":"20"},{"size":782,"mtime":1612277104225,"results":"22","hashOfConfig":"20"},{"size":114,"mtime":1612168109841,"results":"23","hashOfConfig":"20"},{"size":5085,"mtime":1612280789199,"results":"24","hashOfConfig":"20"},{"size":10668,"mtime":1612273377481,"results":"25","hashOfConfig":"20"},{"size":367,"mtime":1612201276786,"results":"26","hashOfConfig":"20"},{"size":125,"mtime":1612200543063,"results":"27","hashOfConfig":"20"},{"size":2855,"mtime":1612415342354,"results":"28","hashOfConfig":"20"},{"size":1383,"mtime":1612241501179,"results":"29","hashOfConfig":"20"},{"size":1034,"mtime":1612201276862,"results":"30","hashOfConfig":"20"},{"size":1710,"mtime":1612324569169,"results":"31","hashOfConfig":"20"},{"size":5401,"mtime":1612414609340,"results":"32","hashOfConfig":"20"},{"size":131,"mtime":1612339166763,"results":"33","hashOfConfig":"20"},{"size":5415,"mtime":1612355937189,"results":"34","hashOfConfig":"20"},{"size":4932,"mtime":1612359312698,"results":"35","hashOfConfig":"20"},{"size":1795,"mtime":1612372133742,"results":"36","hashOfConfig":"20"},{"size":1065,"mtime":1612413123481,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":1,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"13n7clr",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/randy/workspace/tornado-mongodb-react/chatapp/src/App.js",["83","84","85","86","87","88"],"/home/randy/workspace/tornado-mongodb-react/chatapp/src/reportWebVitals.js",[],["89","90"],"/home/randy/workspace/tornado-mongodb-react/chatapp/src/index.js",[],"/home/randy/workspace/tornado-mongodb-react/chatapp/src/config.js",[],["91","92"],"/home/randy/workspace/tornado-mongodb-react/chatapp/src/Components/js/Login.js",["93","94","95","96","97","98","99","100"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { TextField, Button, Card, Input, Divider } from \"@material-ui/core\";\n\nimport { useStateValue } from \"../../StateProvider\";\nimport { Link } from \"react-router-dom\";\nimport Signup from \"./Signup\";\n\nconst API = process.env.REACT_APP_API;\n\nconst BootstrapButton = withStyles({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    boxShadow: \"none\",\n    textTransform: \"none\",\n    fontSize: 16,\n    margin: \"1rem auto\",\n    padding: \"6px 12px\",\n    border: \"1px solid\",\n    lineHeight: 1.5,\n    backgroundColor: \"#0063cc\",\n    borderColor: \"#0063cc\",\n    color: \"white\",\n    fontFamily: [\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(\",\"),\n    \"&:hover\": {\n      backgroundColor: \"#0069d9\",\n      borderColor: \"#0062cc\",\n      boxShadow: \"none\",\n    },\n    \"&:active\": {\n      boxShadow: \"none\",\n      backgroundColor: \"#0062cc\",\n      borderColor: \"#005cbf\",\n    },\n    \"&:focus\": {\n      boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.5)\",\n    },\n  },\n})(Button);\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"columnn\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    justifyContent: \"center\",\n    textAlign: \"center\",\n    flexWrap: \"wrap\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"100%\",\n    },\n  },\n  signinbtn: {\n    width: \"100%\",\n    marginTop: \"1ch\",\n    color: \"white\",\n    fontWeight: \"600\",\n    backgroundColor: \"#7bc043\",\n  },\n  signindiv: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    minWidth: \"auto\",\n    maxWidth: \"300px\",\n  },\n  signincard: {\n    width: \"100%\",\n    paddingTop: \"1\",\n    paddingBottom: \"1ch\",\n    flexDirection: \"column\",\n  },\n  divbtn: {\n    width: \"100%\",\n    marginTop: \"1ch\",\n    color: \"white\",\n    fontWeight: \"600\",\n    backgroundColor: \"#0392cf\",\n    height: \"2.1rem\",\n    borderRadius: \"0.2rem\",\n    textAlign: \"center\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingTop: \"0.7rem\",\n    \"&:hover\": {\n      backgroundColor: \"#7bc043\",\n    },\n    \"&:focus\": {},\n  },\n  divider: {\n    margin: theme.spacing(3),\n  },\n}));\n\nconst Login = ({ history, setLogin }) => {\n  const classes = useStyles();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [open, setOpen] = React.useState(false);\n  const [userIn, setUserIn] = useState(false);\n  const [{ isLogin }, dispatch] = useStateValue();\n\n  useEffect(() => {}, [userIn]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (email == \"\") {\n      console.log(\"Email address not be empty\");\n      return;\n    }\n    if (password == \"\") {\n      console.log(\"Password must not be empty!\");\n      return;\n    }\n    const resp = await fetch(`${API}/profile/${email}`);\n\n    const profile = await resp.json();\n\n    if (profile.password == password) {\n      console.log(\"Login successfully!\");\n      const email_add = profile.email;\n\n      const currentuser = {\n        email: email_add,\n        user_name: profile.user_name,\n        photo_url: profile.photo_url,\n        isLogin: true,\n      };\n\n      console.log(profile._id[\"$oid\"]);\n      const user_id = profile._id[\"$oid\"];\n      localStorage.setItem(\"currentuser\", JSON.stringify(currentuser));\n      dispatch({\n        type: \"IS_USER_LOGIN\",\n        name: profile.user_name,\n        email: profile.email,\n        id: profile._id[\"$oid\"],\n        isLogin: true,\n        url: profile.photo_url,\n      });\n      history.push(\"/\");\n    }\n  };\n\n  return (\n    <div className={classes.signindiv}>\n      <h1>Log In </h1>\n      <Card className={classes.signincard}>\n        <form\n          onSubmit={handleSubmit}\n          className={classes.root}\n          noValidate\n          autoComplete=\"off\"\n        >\n          <TextField\n            onChange={(e) => setEmail(e.target.value)}\n            placeholder=\"Email address\"\n            variant=\"outlined\"\n            size=\"small\"\n            type=\"email\"\n          />\n\n          <TextField\n            onChange={(e) => setPassword(e.target.value)}\n            placeholder=\"Password\"\n            variant=\"outlined\"\n            size=\"small\"\n            type=\"password\"\n          />\n\n          <Button\n            type=\"submit\"\n            className={classes.signinbtn}\n            color=\"primary\"\n            variant=\"contained\"\n            size=\"large\"\n          >\n            Sign In\n          </Button>\n        </form>\n        <Divider className={classes.divider} />\n        <BootstrapButton onClick={() => setOpen(true)}>\n          Create New Account\n        </BootstrapButton>\n      </Card>\n      <Signup open={open} setOpen={setOpen} />\n    </div>\n  );\n};\n\nexport default Login;\n","/home/randy/workspace/tornado-mongodb-react/chatapp/src/Components/js/Signup.js",["101","102","103","104","105","106","107"],"import React, { useState, useEffect, forwardRef } from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { TextField } from \"@material-ui/core\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport SignupData from \"./SignupData\";\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\nimport Tippy from \"@tippy.js/react\";\nimport \"tippy.js/dist/tippy.css\";\n\nconst API = process.env.REACT_APP_API;\n\nconst useStyle = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"columnn\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    justifyContent: \"center\",\n    // textAlign: \"center\",\n\n    flexWrap: \"wrap\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n\n      width: \"100%\",\n    },\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n    },\n  },\n  radio__group: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    paddingLeft: theme.spacing(1),\n  },\n  div__select: {\n    width: \"300px\",\n    textAlign: \"left\",\n    justifyContent: \"left\",\n    paddingLeft: theme.spacing(1),\n    marginBottom: \"1rem\",\n  },\n  muted: {\n    color: \"#aaa\",\n    textAlign: \"left\",\n    marginTop: \"1rem\",\n    fontSize: \"1rem\",\n    margin: theme.spacing(0),\n  },\n  selection: {\n    border: \"1px solid #bbb\",\n    padding: \"4px 5px\",\n  },\n  text__field: {},\n}));\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nconst Signup = forwardRef(({ open, setOpen }, ref) => {\n  const classes = useStyle();\n  const [username, setUserName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [bdate, setBDate] = useState(\"\");\n  const [bmonth, setBMonth] = useState(\"\");\n  const [byear, setBYear] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [photo, setPhoto] = useState(\"\");\n\n  const handleClose = () => {\n    setOpen(false);\n    // setUserName(\"\");\n    // setEmail(\"\");\n    // setPassword(\"\");\n    // setBDate(\"\");\n    // setBMonth(\"\");\n    // setBYear(\"\");\n    // setGender(\"\");\n    // setPhoto(\"\");\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const dob = bmonth + \" \" + bdate + \" \" + byear;\n\n    if (username == \"\") {\n      alert(\"Name must not be empty\");\n      return;\n    }\n    if (email == \"\") {\n      alert(\"Email address must not be empty\");\n      return;\n    }\n\n    if (password == \"\") {\n      alert(\"Password must not be empty\");\n      return;\n    }\n\n    const resp = await fetch(`${API}/adduser`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        user_name: username,\n        email: email,\n        password: password,\n        dob: dob,\n        gender: gender,\n        photo_url: photo,\n      }),\n    });\n\n    const data = await resp.json();\n\n    if (data.status_code == 400) {\n      console.log(data.message);\n      alert(data.message);\n    }\n    if (data.status_code == 200) {\n      alert(data.message);\n      setOpen(false);\n      setUserName(\"\");\n      setEmail(\"\");\n      setPassword(\"\");\n      setBDate(\"\");\n      setBMonth(\"\");\n      setBYear(\"\");\n      setGender(\"\");\n      setPhoto(\"\");\n    }\n  };\n\n  return (\n    <div ref={ref}>\n      <Dialog\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n      >\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              margin: \"auto\",\n            }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                flex: 1,\n                margin: \"auto\",\n              }}\n            >\n              <span style={{ margin: 0, padding: 0 }}>Sign Up</span>\n              <span\n                style={{\n                  fontSize: \"12px\",\n                  padding: 0,\n                  margin: 0,\n                  fontWeight: 300,\n                  color: \"#aaa\",\n                }}\n              >\n                It's easy\n              </span>\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n\n                width: \"fit-content\",\n              }}\n            >\n              <label name=\"labelname\" htmlFor=\"profile_photo\">\n                <Tippy content=\"Add profile picture\">\n                  <IconButton\n                    color=\"primary\"\n                    aria-label=\"upload picture\"\n                    component=\"span\"\n                  >\n                    <PhotoCamera size=\"large\" />\n                  </IconButton>\n                </Tippy>\n              </label>\n              <input\n                id=\"profile_photo\"\n                style={{ display: \"none\" }}\n                type=\"file\"\n                onChange={(e) => setPhoto(e.target.files[0])}\n              />\n            </div>\n            <div style={{ flex: 1, margin: \"auto\" }}></div>\n          </div>\n        </DialogTitle>\n        <DialogContent dividers>\n          <form onSubmit={handleSubmit} className={classes.root}>\n            <FormControl component=\"fieldset\">\n              <TextField\n                type=\"text\"\n                label=\"Name\"\n                value={username}\n                onChange={(e) => setUserName(e.target.value)}\n                name=\"user_name\"\n                variant=\"outlined\"\n                size=\"small\"\n              />\n\n              <TextField\n                type=\"email\"\n                label=\"Email address\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                name=\"email\"\n                variant=\"outlined\"\n                size=\"small\"\n              />\n              <TextField\n                type=\"password\"\n                label=\"Password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                name=\"password\"\n                variant=\"outlined\"\n                size=\"small\"\n              />\n              <div className={classes.div__select}>\n                <FormLabel component=\"legend\" className={classes.muted}>\n                  Birthday\n                </FormLabel>\n                <select\n                  id=\"dob-month\"\n                  className={classes.selection}\n                  onClick={(e) => setBMonth(e.target.value)}\n                  name=\"month\"\n                >\n                  {SignupData[0].map((item, i) => (\n                    <option key={i} value={item}>\n                      {item}\n                    </option>\n                  ))}\n                </select>\n                <select\n                  id=\"dob-date\"\n                  className={classes.selection}\n                  onClick={(e) => setBDate(e.target.value)}\n                  name=\"date\"\n                >\n                  {SignupData[1].map((item, i) => (\n                    <option key={i} value={item}>\n                      {item}\n                    </option>\n                  ))}\n                </select>\n                <select\n                  id=\"dob-year\"\n                  className={classes.selection}\n                  onClick={(e) => setBYear(e.target.value)}\n                  name=\"year\"\n                >\n                  {SignupData[2].map((item, i) => (\n                    <option key={i} value={item}>\n                      {item}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              <div className={classes.radio__group}>\n                <FormControl component=\"fieldset\">\n                  <FormLabel component=\"legend\">Gender</FormLabel>\n                  <RadioGroup\n                    row\n                    aria-label=\"gender\"\n                    name=\"gender\"\n                    value={gender}\n                    onChange={(e) => setGender(e.target.value)}\n                  >\n                    <FormControlLabel\n                      value=\"female\"\n                      control={<Radio />}\n                      label=\"Female\"\n                    />\n                    <FormControlLabel\n                      value=\"male\"\n                      control={<Radio />}\n                      label=\"Male\"\n                    />\n                    <FormControlLabel\n                      value=\"other\"\n                      control={<Radio />}\n                      label=\"Other\"\n                    />\n                  </RadioGroup>\n                </FormControl>\n              </div>\n\n              <Button\n                style={{ marginTop: \"1rem\" }}\n                variant=\"contained\"\n                color=\"primary\"\n                type=\"submit\"\n              >\n                Save\n              </Button>\n            </FormControl>\n          </form>\n        </DialogContent>\n        {/* <DialogActions>\n    <Button autoFocus onClick={handleClose} color=\"primary\">\n    Save changes\n    </Button>\n    </DialogActions> */}\n      </Dialog>\n    </div>\n  );\n});\n\nexport default Signup;\n",["108","109"],"/home/randy/workspace/tornado-mongodb-react/chatapp/src/StateProvider.js",[],"/home/randy/workspace/tornado-mongodb-react/chatapp/src/Components/js/Home.js",[],"/home/randy/workspace/tornado-mongodb-react/chatapp/src/Components/js/ChatBox.js",["110","111","112","113","114","115","116","117","118","119","120","121","122","123"],"/home/randy/workspace/tornado-mongodb-react/chatapp/src/Components/js/SignupData.js",["124"],"export default [['Month', 'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n['Day', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31'],\r\n['Year', '2029', '2028', '2027', '2026', '2025', '2024', '2023', '2022',\r\n  '2021', '2020', '2019', '2018', '2017', '2016', '2015', '2014', '2013', '2012', '2011',\r\n  '2010', '2009', '2008', '2007', '2006', '2005', '2004', '2003', '2002', '2001', '2000',\r\n  '1999', '1998', '1997', '1996', '1995', '1994', '1993', '1992', '1991', '1990', '1989',\r\n  '1988', '1987', '1986', '1985', '1984', '1983', '1982', '1981', '1980', '1979', '1978',\r\n  '1977', '1976', '1975', '1974', '1973', '1972', '1971', '1970', '1969', '1968', '1967',\r\n  '1966', '1965', '1964', '1963', '1962', '1961', '1960', '1959', '1958', '1957', '1956',\r\n  '1955', '1954', '1953', '1952', '1951', '1950', '1949', '1948', '1947', '1946', '1945',\r\n  '1944', '1943', '1942', '1941', '1940', '1939', '1938', '1937', '1936', '1935', '1934',\r\n  '1933', '1932', '1931', '1930', '1929', '1928', '1927', '1926', '1925', '1924', '1923',\r\n  '1922', '1921', '1920', '1919', '1918', '1917', '1916', '1915', '1914', '1913', '1912', '1911',\r\n  '1910', '1909', '1908', '1907', '1906', '1905', '1904', '1903', '1902', '1901', '1900']]\r\n","/home/randy/workspace/tornado-mongodb-react/chatapp/src/reducer.js",[],"/home/randy/workspace/tornado-mongodb-react/chatapp/src/Components/js/Navbar.js",["125"],"import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { Link } from \"react-router-dom\";\n\nimport { useStateValue } from \"../../StateProvider\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function Navbar() {\n  const classes = useStyles();\n  const [{ isLogin }, dispatch] = useStateValue();\n\n  useEffect(() => {\n    console.log(\"login from navbar\");\n  }, [isLogin]);\n\n  const handeleLogOut = (e) => {\n    e.preventDefault();\n    dispatch({\n      type: \"IS_USER_LOGIN\",\n      isLogin: false,\n    });\n    localStorage.clear();\n  };\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            News\n          </Typography>\n          {isLogin ? (\n            <Button onClick={handeleLogOut}>Log Out</Button>\n          ) : (\n            <Link to=\"/login\">\n              <Button color=\"inherit\">Log In</Button>\n            </Link>\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n",["126","127"],"/home/randy/workspace/tornado-mongodb-react/chatapp/src/Components/js/Chat.js",["128","129","130","131","132","133","134","135","136","137","138","139","140","141","142"],"/home/randy/workspace/tornado-mongodb-react/chatapp/src/Components/js/Profile.js",[],"/home/randy/workspace/tornado-mongodb-react/chatapp/src/Components/js/RenderUser.js",["143","144","145","146","147","148"],"import React, { useState, useEffect } from \"react\";\n\nimport \"../css/RenderUser.css\";\n\nimport { blue } from \"@material-ui/core/colors\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport {\n  ListItem,\n  ListItemText,\n  List,\n  Typography,\n  Badge,\n  IconButton,\n} from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { useStateValue } from \"../../StateProvider\";\nimport AddFriend from \"./AddFriend\";\nimport { MoreVertOutlined } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600],\n  },\n  root: {\n    display: \"flex\",\n    top: \"12vh !important\",\n    paddingRight: \"1ch\",\n    paddingLeft: \"1ch\",\n  },\n  renderuserdiv: {\n    borderBottom: \"1px solid #eee\",\n    padding: \"0ch 2ch\",\n    textAlign: \"center\",\n  },\n  moreIcon: {\n    display: \"none\",\n    width: \"fit-content\",\n    height: \"auto\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    border: \"1px solid #bbb\",\n  },\n});\n\nexport default function RenderUser({ profile }) {\n  const classes = useStyles();\n\n  const [open, setOpen] = useState(false);\n  const isMenuOpen = Boolean(true);\n\n  const [{ isLogin }, dispatch] = useStateValue();\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [userId, setUserId] = useState(\"\");\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleMenuClose = () => {\n    // props.setAnchorE(null);\n  };\n\n  const handleListItemClick = (item) => {\n    // props.setAnchorE(null);\n\n    if (!isLogin) {\n      alert(\"Please login to chat with friends\");\n      return;\n    }\n\n    if (isMenuOpen) {\n      dispatch({\n        type: \"CHATROOM_IS_OPEN\",\n        isChat: isMenuOpen,\n        name: item.name,\n        url: item.url,\n        id: item.id,\n      });\n    }\n  };\n\n  const handleAnchorEl = (e, id) => {\n    setAnchorEl(e.currentTarget);\n    setUserId(id);\n  };\n\n  const handleMouseEnter = (id) => {\n    document.getElementById(id).style.display = \"block\";\n  };\n  const handleMouseLeave = (id) => {\n    document.getElementById(id).style.display = \"none\";\n  };\n  useEffect(() => {\n    // profile.map((item) => console.log(item.name, item.id, item.email));\n  }, []);\n\n  return (\n    <div>\n      <div className={classes.renderuserdiv}>\n        <Typography variant=\"h5\" component=\"h4\">\n          Chat with friends\n        </Typography>\n      </div>\n\n      <List className=\"list__renderuser\">\n        {profile?.length > 0\n          ? profile.map((item, index) => (\n              <div\n                onMouseLeave={() => handleMouseLeave(item.id)}\n                style={{ display: \"flex\" }}\n                key={item.id}\n              >\n                <ListItem\n                  data-item=\"chat\"\n                  style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"space-between\",\n                    borderRadius: \"0.5rem\",\n                    marginLeft: \"0.5rem\",\n                  }}\n                  button\n                  onMouseEnter={() => handleMouseEnter(item.id)}\n                >\n                  <div\n                    style={{ display: \"flex\", alignItems: \"center\" }}\n                    onClick={(e) => handleListItemClick(item)}\n                  >\n                    <ListItemAvatar>\n                      <Badge badgeContent={item.notification} color=\"secondary\">\n                        <Avatar className={classes.avatar}>\n                          <img\n                            src=\"\"\n                            alt=\"\"\n                            className=\"person_img\"\n                            style={{\n                              width: \"2rem\",\n                              height: \"2rem\",\n                              borderRadius: \"50%\",\n                            }}\n                          />\n                        </Avatar>\n                      </Badge>\n                    </ListItemAvatar>\n                    <ListItemText primary={item.name} />\n                  </div>\n                  <div\n                    style={{\n                      width: \"3rem\",\n                      height: \"3rem\",\n                      alignItems: \"center\",\n                      justifyContent: \"center\",\n                      margin: 0,\n                      padding: 0,\n                    }}\n                  >\n                    <IconButton\n                      id={item.id}\n                      onClick={(e) => handleAnchorEl(e, item.id)}\n                      className={classes.moreIcon}\n                    >\n                      <MoreVertOutlined\n                        style={{ width: \"1.3rem\", height: \"1.3rem\" }}\n                      />\n                    </IconButton>\n                  </div>\n                </ListItem>\n              </div>\n            ))\n          : null}\n\n        <ListItem autoFocus button onClick={() => setOpen(true)} id=\"addFriend\">\n          <ListItemAvatar>\n            <Avatar>\n              <AddIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"Add Friend \" />\n        </ListItem>\n      </List>\n\n      {/* <AddFriend open={open} onClose={handleClose} selectedValue={\"\"} /> */}\n\n      {/* <UserMenu anchorEl={anchorEl} setAnchorEl={setAnchorEl} userId={userId} /> */}\n    </div>\n  );\n}\n","/home/randy/workspace/tornado-mongodb-react/chatapp/src/Components/js/AddFriend.js",["149","150","151","152"],"/home/randy/workspace/tornado-mongodb-react/chatapp/src/Components/js/Message.js",["153","154"],"/home/randy/workspace/tornado-mongodb-react/chatapp/src/Components/ProjectImages/ProjectImages.js",[],{"ruleId":"155","severity":1,"message":"156","line":1,"column":27,"nodeType":"157","messageId":"158","endLine":1,"endColumn":33},{"ruleId":"155","severity":1,"message":"159","line":4,"column":8,"nodeType":"157","messageId":"158","endLine":4,"endColumn":15},{"ruleId":"155","severity":1,"message":"160","line":8,"column":8,"nodeType":"157","messageId":"158","endLine":8,"endColumn":14},{"ruleId":"155","severity":1,"message":"161","line":10,"column":10,"nodeType":"157","messageId":"158","endLine":10,"endColumn":18},{"ruleId":"155","severity":1,"message":"162","line":11,"column":7,"nodeType":"157","messageId":"158","endLine":11,"endColumn":10},{"ruleId":"163","severity":2,"message":"164","line":22,"column":42,"nodeType":"157","messageId":"165","endLine":22,"endColumn":46},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"166","replacedBy":"170"},{"ruleId":"168","replacedBy":"171"},{"ruleId":"155","severity":1,"message":"172","line":3,"column":35,"nodeType":"157","messageId":"158","endLine":3,"endColumn":40},{"ruleId":"155","severity":1,"message":"173","line":6,"column":10,"nodeType":"157","messageId":"158","endLine":6,"endColumn":14},{"ruleId":"155","severity":1,"message":"174","line":117,"column":18,"nodeType":"157","messageId":"158","endLine":117,"endColumn":27},{"ruleId":"155","severity":1,"message":"175","line":118,"column":12,"nodeType":"157","messageId":"158","endLine":118,"endColumn":19},{"ruleId":"176","severity":1,"message":"177","line":124,"column":15,"nodeType":"178","messageId":"179","endLine":124,"endColumn":17},{"ruleId":"176","severity":1,"message":"177","line":128,"column":18,"nodeType":"178","messageId":"179","endLine":128,"endColumn":20},{"ruleId":"176","severity":1,"message":"177","line":136,"column":26,"nodeType":"178","messageId":"179","endLine":136,"endColumn":28},{"ruleId":"155","severity":1,"message":"180","line":148,"column":13,"nodeType":"157","messageId":"158","endLine":148,"endColumn":20},{"ruleId":"155","severity":1,"message":"181","line":1,"column":27,"nodeType":"157","messageId":"158","endLine":1,"endColumn":36},{"ruleId":"155","severity":1,"message":"182","line":106,"column":7,"nodeType":"157","messageId":"158","endLine":106,"endColumn":20},{"ruleId":"176","severity":1,"message":"177","line":140,"column":18,"nodeType":"178","messageId":"179","endLine":140,"endColumn":20},{"ruleId":"176","severity":1,"message":"177","line":144,"column":15,"nodeType":"178","messageId":"179","endLine":144,"endColumn":17},{"ruleId":"176","severity":1,"message":"177","line":149,"column":18,"nodeType":"178","messageId":"179","endLine":149,"endColumn":20},{"ruleId":"176","severity":1,"message":"177","line":171,"column":26,"nodeType":"178","messageId":"179","endLine":171,"endColumn":28},{"ruleId":"176","severity":1,"message":"177","line":175,"column":26,"nodeType":"178","messageId":"179","endLine":175,"endColumn":28},{"ruleId":"166","replacedBy":"183"},{"ruleId":"168","replacedBy":"184"},{"ruleId":"155","severity":1,"message":"185","line":3,"column":16,"nodeType":"157","messageId":"158","endLine":3,"endColumn":26},{"ruleId":"155","severity":1,"message":"186","line":5,"column":8,"nodeType":"157","messageId":"158","endLine":5,"endColumn":14},{"ruleId":"155","severity":1,"message":"187","line":6,"column":8,"nodeType":"157","messageId":"158","endLine":6,"endColumn":20},{"ruleId":"155","severity":1,"message":"188","line":47,"column":10,"nodeType":"157","messageId":"158","endLine":47,"endColumn":20},{"ruleId":"155","severity":1,"message":"189","line":47,"column":22,"nodeType":"157","messageId":"158","endLine":47,"endColumn":35},{"ruleId":"155","severity":1,"message":"190","line":48,"column":10,"nodeType":"157","messageId":"158","endLine":48,"endColumn":23},{"ruleId":"155","severity":1,"message":"191","line":48,"column":25,"nodeType":"157","messageId":"158","endLine":48,"endColumn":41},{"ruleId":"155","severity":1,"message":"192","line":49,"column":22,"nodeType":"157","messageId":"158","endLine":49,"endColumn":35},{"ruleId":"155","severity":1,"message":"193","line":50,"column":10,"nodeType":"157","messageId":"158","endLine":50,"endColumn":18},{"ruleId":"155","severity":1,"message":"194","line":50,"column":20,"nodeType":"157","messageId":"158","endLine":50,"endColumn":31},{"ruleId":"155","severity":1,"message":"195","line":52,"column":9,"nodeType":"157","messageId":"158","endLine":52,"endColumn":22},{"ruleId":"155","severity":1,"message":"196","line":54,"column":9,"nodeType":"157","messageId":"158","endLine":54,"endColumn":22},{"ruleId":"155","severity":1,"message":"197","line":55,"column":9,"nodeType":"157","messageId":"158","endLine":55,"endColumn":22},{"ruleId":"155","severity":1,"message":"198","line":57,"column":9,"nodeType":"157","messageId":"158","endLine":57,"endColumn":24},{"ruleId":"199","severity":1,"message":"200","line":1,"column":1,"nodeType":"201","endLine":14,"endColumn":91},{"ruleId":"155","severity":1,"message":"202","line":1,"column":28,"nodeType":"157","messageId":"158","endLine":1,"endColumn":36},{"ruleId":"166","replacedBy":"203"},{"ruleId":"168","replacedBy":"204"},{"ruleId":"155","severity":1,"message":"205","line":8,"column":30,"nodeType":"157","messageId":"158","endLine":8,"endColumn":39},{"ruleId":"155","severity":1,"message":"172","line":8,"column":41,"nodeType":"157","messageId":"158","endLine":8,"endColumn":46},{"ruleId":"155","severity":1,"message":"206","line":10,"column":8,"nodeType":"157","messageId":"158","endLine":10,"endColumn":19},{"ruleId":"155","severity":1,"message":"185","line":11,"column":8,"nodeType":"157","messageId":"158","endLine":11,"endColumn":18},{"ruleId":"155","severity":1,"message":"207","line":12,"column":8,"nodeType":"157","messageId":"158","endLine":12,"endColumn":16},{"ruleId":"155","severity":1,"message":"208","line":13,"column":8,"nodeType":"157","messageId":"158","endLine":13,"endColumn":16},{"ruleId":"155","severity":1,"message":"209","line":14,"column":8,"nodeType":"157","messageId":"158","endLine":14,"endColumn":22},{"ruleId":"155","severity":1,"message":"210","line":15,"column":8,"nodeType":"157","messageId":"158","endLine":15,"endColumn":15},{"ruleId":"155","severity":1,"message":"211","line":82,"column":9,"nodeType":"157","messageId":"158","endLine":82,"endColumn":15},{"ruleId":"155","severity":1,"message":"212","line":89,"column":20,"nodeType":"157","messageId":"158","endLine":89,"endColumn":31},{"ruleId":"213","severity":1,"message":"214","line":92,"column":13,"nodeType":"215","endLine":102,"endColumn":4},{"ruleId":"213","severity":1,"message":"214","line":108,"column":13,"nodeType":"215","endLine":115,"endColumn":4},{"ruleId":"155","severity":1,"message":"216","line":117,"column":9,"nodeType":"157","messageId":"158","endLine":117,"endColumn":26},{"ruleId":"155","severity":1,"message":"217","line":132,"column":11,"nodeType":"157","messageId":"158","endLine":132,"endColumn":15},{"ruleId":"155","severity":1,"message":"218","line":136,"column":9,"nodeType":"157","messageId":"158","endLine":136,"endColumn":21},{"ruleId":"155","severity":1,"message":"219","line":19,"column":8,"nodeType":"157","messageId":"158","endLine":19,"endColumn":17},{"ruleId":"155","severity":1,"message":"220","line":51,"column":10,"nodeType":"157","messageId":"158","endLine":51,"endColumn":14},{"ruleId":"155","severity":1,"message":"221","line":55,"column":10,"nodeType":"157","messageId":"158","endLine":55,"endColumn":18},{"ruleId":"155","severity":1,"message":"222","line":56,"column":10,"nodeType":"157","messageId":"158","endLine":56,"endColumn":16},{"ruleId":"155","severity":1,"message":"223","line":58,"column":9,"nodeType":"157","messageId":"158","endLine":58,"endColumn":20},{"ruleId":"155","severity":1,"message":"224","line":61,"column":9,"nodeType":"157","messageId":"158","endLine":61,"endColumn":24},{"ruleId":"155","severity":1,"message":"181","line":1,"column":27,"nodeType":"157","messageId":"158","endLine":1,"endColumn":36},{"ruleId":"155","severity":1,"message":"225","line":63,"column":19,"nodeType":"157","messageId":"158","endLine":63,"endColumn":29},{"ruleId":"155","severity":1,"message":"226","line":66,"column":11,"nodeType":"157","messageId":"158","endLine":66,"endColumn":18},{"ruleId":"155","severity":1,"message":"227","line":66,"column":20,"nodeType":"157","messageId":"158","endLine":66,"endColumn":33},{"ruleId":"176","severity":1,"message":"177","line":20,"column":27,"nodeType":"178","messageId":"179","endLine":20,"endColumn":29},{"ruleId":"155","severity":1,"message":"228","line":23,"column":9,"nodeType":"157","messageId":"158","endLine":23,"endColumn":19},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'ChatBox' is defined but never used.","'Signup' is defined but never used.","'API_HOST' is defined but never used.","'API' is assigned a value but never used.","no-undef","'Chat' is not defined.","undef","no-native-reassign",["229"],"no-negated-in-lhs",["230"],["229"],["230"],"'Input' is defined but never used.","'Link' is defined but never used.","'setUserIn' is assigned a value but never used.","'isLogin' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'user_id' is assigned a value but never used.","'useEffect' is defined but never used.","'DialogActions' is assigned a value but never used.",["229"],["230"],"'IconButton' is defined but never used.","'images' is defined but never used.","'ReactLoading' is defined but never used.","'messageEnd' is assigned a value but never used.","'setMessageEnd' is assigned a value but never used.","'isShowSticker' is assigned a value but never used.","'setIsShowSticker' is assigned a value but never used.","'setInputValue' is assigned a value but never used.","'refInput' is assigned a value but never used.","'setRefInput' is assigned a value but never used.","'renderSticker' is assigned a value but never used.","'onSendMessage' is assigned a value but never used.","'onChoosePhoto' is assigned a value but never used.","'openListSticker' is assigned a value but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'useState' is defined but never used.",["229"],["230"],"'TextField' is defined but never used.","'FormControl' is defined but never used.","'SendIcon' is defined but never used.","'FlipMove' is defined but never used.","'ScrollToBottom' is defined but never used.","'Message' is defined but never used.","'divref' is assigned a value but never used.","'setUserName' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'handleSendMessage' is assigned a value but never used.","'data' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'AddFriend' is defined but never used.","'open' is assigned a value but never used.","'anchorEl' is assigned a value but never used.","'userId' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'handleMenuClose' is assigned a value but never used.","'setProfile' is assigned a value but never used.","'onClose' is assigned a value but never used.","'selectedValue' is assigned a value but never used.","'formatDate' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]